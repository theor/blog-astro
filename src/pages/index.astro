---
import BaseHead from "../components/BaseHead.astro";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection } from "astro:content";
import FormattedDate from "../components/FormattedDate.astro";
import { findImage, isVideo } from "../utils";
import { Icon } from 'astro-icon'
// const posts =  (await getCollection('blog', x => !x.data.draft)).sort(
// 	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
// );
let posts = await Promise.all(
    (
        await getCollection("blog", (x) => !x.data.draft)
    )
        .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
        .map(async (x) => {
            const rendered = await x.render();
            const b = x.data.banner
                ? await findImage(`${x.slug}/${x.data.banner}`).catch()
                : null;
            return { banner: b, rendered, ...x };
        })
);
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
        <style lang="scss">
            [astro-icon] {
                width: 1rem;
                margin-right: var(--spacing-1);
            }
            ul {
                list-style-type: none;
                padding: unset;
            }
            ul li {
                display: flex;
            }
            ul li :global(time) {
                flex: 0 0 130px;
                font-style: italic;
                color: #595959;
            }
            ul li a:visited {
                color: #8e32dc;
            }

            .post-preview {
                .tag {
                    margin-right: var(--spacing-1);
                }
                a.abstract {
                    text-decoration: none;
                    color: inherit;
                }
                margin-bottom: var(--spacing-8);
                h1 {
                    margin: unset;
                }
                a {
                }
                img {
                    width: 100%;
                    height: 100px;
                    object-fit: cover;
                    object-position: center;
                }
            }
            video {
                width: 100%;
                height: 100px;
                object-fit: cover;
                object-position: center;
            }
            .metadata {
                display:flex;
                * {
                color: var(--color-text-light);
                }
                span.sep { margin: 0 var(--spacing-1) 0 var(--spacing-2);}
            }
        </style>
    </head>
    <body>
        <Header />
        <main>
            <section>
                {
                    posts.map((post) => {
                        return (
                            <div class="post-preview">
                                <h1>
                                    <a href={`/${post.slug}/`}>
                                        {post.data.title}
                                    </a>
                                </h1>
                                <a href={`/${post.slug}/`} aria-label={post.data.title}>
                                    {post.data.banner &&
                                        (!isVideo(post.data.banner) ? (
                                            <img src={post.banner} />
                                        ) : (
                                            <video
                                                loop
                                                autoplay
                                                src={post.banner}
                                            />
                                        ))}
                                </a>
                                <div class="metadata">
<Icon name="mdi:calendar" />
                                <FormattedDate date={post.data.pubDate} />
                                {(<span class="sep"> | </span><Icon name="mdi:clock" viewBox="-3 -3 25 25" />)}{post.rendered.remarkPluginFrontmatter.timeToRead}
                                {post.data.tags && (<span class="sep"> | </span><Icon name="mdi:tags" viewBox="-3 -3 25 25" />)}
                                {post.data.tags &&
                                    post.data.tags.map((x) => (
                                        <a class="tag" href={`/tags/${x}`}>{x}</a>
                                    ))}
                                </div>
                                <a class="abstract" href={`/${post.slug}/`}>
                                    {
                                        post.rendered.remarkPluginFrontmatter
                                            .abstract
                                    }
                                    ..
                                </a>
                            </div>
                            // <hr/>
                        );
                    })
                }
            </section>
        </main>
        <Footer />
    </body>
</html>
